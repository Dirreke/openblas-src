name: openblas-src

on:
  push:
    branches:
      - master
  pull_request: {}
  workflow_dispatch: {}

jobs:
  windows-msvc:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        triple:
          - x64-windows
          - x64-windows-static
          - x64-windows-static-md
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ./vcpkg
          key: vcpkg-openblas
      - name: Install vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git --depth 1
          cd vcpkg
          ./bootstrap-vcpkg.bat
      - name: Install OpenBLAS by vcpkg
        run: |
          ./vcpkg/vcpkg.exe install openblas:${{ matrix.triple }}
      - name: Test features=system
        run: cargo test --features=system --manifest-path=openblas-src/Cargo.toml
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg
        if: ${{ matrix.triple == 'x64-windows' }}

      - name: Test features=system,static
        run: cargo test --features=system,static --manifest-path=openblas-src/Cargo.toml
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg
        if: ${{ matrix.triple == 'x64-windows-static-md' }}

      - name: Test features=system,static with crt-static
        run: cargo test --features=system,static --manifest-path=openblas-src/Cargo.toml
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg
          RUSTFLAGS: "-C target-feature=+crt-static"
        if: ${{ matrix.triple == 'x64-windows-static' }}

  macos:
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        feature:
          - ""
          - static
          - system
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install OpenBLAS by homebrew
        run: |
          brew install openblas
        if: ${{ contains(matrix.feature, 'system') }}
      - name: Test features=${{ matrix.feature }}
        run: cargo test --features=${{ matrix.feature }} --manifest-path=openblas-src/Cargo.toml

  x86_64-unknown-linux-gnu:
    runs-on: ubuntu-22.04
    container:
      image: rust
    strategy:
      fail-fast: false
      matrix:
        feature:
          - ""
          - static
          - system
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install gfortran by apt
        run: |
          apt update
          apt install -y gfortran
      - name: Install OpenBLAS by apt
        run: |
          apt update
          apt install -y libopenblas-dev
        if: ${{ contains(matrix.feature, 'system') }}
      - name: Test features=${{ matrix.feature }}
        run: cargo test --features=${{ matrix.feature }} --manifest-path=openblas-src/Cargo.toml
  
  cross:
    name: ${{matrix.target}} (${{matrix.feature}})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature:
          - ""
          - static
          - system
        target:
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{matrix.target}} 
      - name: Install Cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Test features=${{ matrix.feature }}
        run: cross test --target ${{matrix.target}} --features=${{ matrix.feature }} --manifest-path=openblas-src/Cargo.toml
